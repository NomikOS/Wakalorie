/**  * @fileOverview Client side authentication / authorization module * @author Welsh Harris * @created 10/19/2013 * * @name Wakalorie * @copyright (c) 2013 CoreBits DataWorks LLC * @license Released under the MIT license (included in distribution in MIT LICENSE.txt) */ /** @namespace */var WAKL = WAKL || {};WAKL.auth = (function () {	"use strict";	var loggedIn = null;	//attempt to login the user	function login(email, password, callback) {		WAF.directory.login(email, password , {			onSuccess: callback,			onError: callback		});	}		//logout the current user	function logout(callback) {		WAF.directory.logout({			onSuccess: callback,			onError: callback		});	}		//check to see if the current user is logged in	function isLoggedIn() {		if (loggedIn === null) {			loggedIn = WAF.directory.currentUser() !== null;					}		return loggedIn;	}		//check to see if the current user is in the given group	function isInGroup(groupName) {		return WAF.directory.currentUserBelongsTo(groupName);	}		//check to see if the user is logged in, and if not redirect them to another page	function loggedInCheck(redirect) {		if (isLoggedIn() === false) {			window.location = redirect;		}	}		//was this the users first time logging in?	function isFirstLogin() {		var isFirst = false;				if (WAF.directory.currentUser().fullName === "true") { //fullName contains User.hasLoggedIn			isFirst = false;		} else {			isFirst = true;		}				return isFirst;	}    //--------------------    //public API    //--------------------    return {        login: login,        logout: logout,        isLoggedIn: isLoggedIn,        isInGroup: isInGroup,        loggedInCheck: loggedInCheck,        isFirstLogin: isFirstLogin    };}());