/**  * @fileOverview General stuff for error handling * @author Welsh Harris * @created 08/08/2013 * * @name Wakalorie * @copyright (c) 2013 CoreBits DataWorks LLC * @license Released under the MIT license (included in distribution in MIT LICENSE.txt) *//** @namespace */var WAKL = WAKL || {};WAKL.err = (function() {	"use strict";		//handle errors	function handler(event) {		var errMsg = event.error[0].message,			errParams = {},			errParamsJson = "";		if (errMsg === WAKL.CONST.ERR_NO_SERVER) {			alert("Cannot connect to the server");		} else {						//first check to see if the session is still alive			//and if not kick 'em back to the login page			WAKL.auth.sessionCheck(WAKL.CONST.PAGE_LOGIN);						//error stuff has been re-written but didn't take time to get in to the demo			alert(event.error);						//setup info to send to the server//			errParams = {//				name: "Gen_Client",//				errInfo: JSON.stringify(event.error),//				userAgent: navigator.userAgent//			};//			errParamsJson = JSON.stringify(errParams);			//log the error on the server and alert the user			//note that if there's an error at this point we don't handle it, end of the line//			sources.errLog.errOnClient({//				onSuccess: function(event) {//					errMsg = event.result;//					if (errMsg !== "") {//						alert(errMsg); //let the user know something bad happened//					}//				}, //				onError: function(event) {},//				arguments: [errParamsJson]//			});					}	}	//--------------------	//public API	//--------------------	return {		handler: handler	};	}());